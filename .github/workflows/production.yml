name: Production - Publish Docker Image to GHCR

on:
  push:
    tags:
      - "v*"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  build-and-publish-image:
    runs-on: ubuntu-22.04

    environment: production

    permissions:
      # For pushing to GHCR
      packages: write
      # For attestation step
      contents: read
      id-token: write
      attestations: write

    steps:
      - uses: actions/checkout@v4

      # Download build artifacts
      - uses: dawidd6/action-download-artifact@v9
        with:
          workflow: axum-api.yml
          workflow_conclusion: success
          path: artifacts
      - uses: dawidd6/action-download-artifact@v9
        with:
          workflow: svelte-ui.yml
          workflow_conclusion: success
          path: artifacts

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: type=semver,pattern={{version}}
          labels: |
            org.opencontainers.image.description=Self-Hosted AI Chat App

      - name: Build and Push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./ci/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
